{"version":3,"sources":["component/AddForm.jsx","component/TodoItem.jsx","const/filter-state.js","component/ItemList.jsx","component/Filter.jsx","component/Footer.jsx","component/Home.jsx","component/Detail.jsx","component/Edit.jsx","component/Header.jsx","component/App.jsx","index.jsx"],"names":["AddForm","props","onSubmit","addTodo","type","placeholder","defaultValue","inputText","onChange","updateInputText","value","TodoItem","detailItemPath","itemIndex","editItemPath","htmlFor","todo","createdAt","id","checked","isDone","toggleCheck","title","onClick","deleteTodo","href","FILTER_STATE","ItemList","todoElements","todos","map","index","filterState","Filter","className","changeFilterState","Footer","Home","Detail","useParams","border","Edit","useEffect","editingText","inputEditingText","updateTodo","updateEditingText","Header","App","useState","JSON","parse","localStorage","getItem","setTodos","setInputText","setEditingText","setFilterState","setItem","stringify","Fragment","path","component","exact","e","preventDefault","trim","todosCopy","slice","push","Date","target","targetTodoCreatedAt","editingTodoIndex","indexOf","checkedState","newTodos","filter","editingItemId","console","log","window","location","pathname","editingTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa783e08.chunk.js","sourcesContent":["import \"../css/App.css\";\n\nfunction AddForm(props) {\n  return (\n    <form onSubmit={props.addTodo}>\n      <input\n        type=\"text\"\n        placeholder=\"Todoを入力\"\n        defaultValue={props.inputText}\n        onChange={props.updateInputText}\n      />\n      <input type=\"submit\" value=\"追加\" />\n    </form>\n  );\n}\n\nexport default AddForm;\n","import \"../css/App.css\";\n\nfunction TodoItem(props) {\n  const detailItemPath = \"/detail/\" + props.itemIndex;\n  const editItemPath = \"/edit/\" + props.itemIndex;\n\n  return (\n    <li>\n      <label htmlFor={props.todo.createdAt}>\n        <input\n          type=\"checkbox\"\n          id={props.todo.createdAt}\n          checked={props.todo.isDone}\n          onChange={() => props.toggleCheck(props.todo.createdAt)}\n        />\n        {props.todo.title}\n      </label>\n      <button onClick={() => props.deleteTodo(props.todo.createdAt)}>×</button>\n      <a href={editItemPath}>\n        <button>編集</button>\n      </a>\n      <a href={detailItemPath}>\n        <button>詳細</button>\n      </a>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","/**\n * Todoリストのフィルターの状態の一覧です\n */\nexport const FILTER_STATE = {\n  ALL: \"all\",\n  ACTIVE: \"active\",\n  COMPLETED: \"completed\",\n};\n","import \"../css/App.css\";\nimport TodoItem from \"./TodoItem\";\nimport { FILTER_STATE } from \"../const/filter-state\";\n\nfunction ItemList(props) {\n  const todoElements = props.todos.map((todo, index) => {\n    if (props.filterState === FILTER_STATE.ALL) {\n      return (\n        <TodoItem\n          key={todo.createdAt}\n          itemIndex={index}\n          todo={todo}\n          toggleCheck={props.toggleCheck}\n          deleteTodo={props.deleteTodo}\n        />\n      );\n    }\n    if (props.filterState === FILTER_STATE.ACTIVE) {\n      if (todo.isDone === false) {\n        return (\n          <TodoItem\n            key={todo.createdAt}\n            itemIndex={index}\n            todo={todo}\n            toggleCheck={props.toggleCheck}\n            deleteTodo={props.deleteTodo}\n          />\n        );\n      }\n    }\n    if (props.filterState === FILTER_STATE.COMPLETED) {\n      if (todo.isDone === true) {\n        return (\n          <TodoItem\n            key={todo.createdAt}\n            itemIndex={index}\n            todo={todo}\n            toggleCheck={props.toggleCheck}\n            deleteTodo={props.deleteTodo}\n          />\n        );\n      }\n    }\n    return undefined;\n  });\n\n  return <ul>{todoElements}</ul>;\n}\n\nexport default ItemList;\n","import { FILTER_STATE } from \"../const/filter-state\";\nimport \"../css/App.css\";\n\nfunction Filter(props) {\n  return (\n    <form id=\"filterList\">\n      <label>\n        <input\n          type=\"radio\"\n          className=\"filter\"\n          value=\"all\"\n          checked={props.filterState === FILTER_STATE.ALL}\n          onChange={props.changeFilterState}\n        />\n        All\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          className=\"filter\"\n          value=\"active\"\n          checked={props.filterState === FILTER_STATE.ACTIVE}\n          onChange={props.changeFilterState}\n        />\n        Active\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          className=\"filter\"\n          value=\"completed\"\n          checked={props.filterState === FILTER_STATE.COMPLETED}\n          onChange={props.changeFilterState}\n        />\n        Completed\n      </label>\n    </form>\n  );\n}\n\nexport default Filter;\n","import \"../css/App.css\";\nimport Filter from \"./Filter\";\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      <Filter\n        changeFilterState={props.changeFilterState}\n        filterState={props.filterState}\n      />\n    </div>\n  );\n}\n\nexport default Footer;\n","import \"../css/App.css\";\nimport React from \"react\";\nimport AddForm from \"./AddForm\";\nimport ItemList from \"./ItemList\";\nimport Footer from \"./Footer\";\n\nfunction Home(props) {\n  return (\n    <div className=\"container\">\n      <AddForm\n        addTodo={props.addTodo}\n        inputText={props.inputText}\n        updateInputText={props.updateInputText}\n      />\n      <ItemList\n        todos={props.todos}\n        toggleCheck={props.toggleCheck}\n        deleteTodo={props.deleteTodo}\n        filterState={props.filterState}\n      />\n      <Footer\n        changeFilterState={props.changeFilterState}\n        filterState={props.filterState}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","import \"../css/App.css\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Detail(props) {\n  const { id } = useParams();\n\n  return (\n    <div className=\"container\">\n      <table border=\"1\" className=\"todo-table\">\n        <tr>\n          <th>進捗</th>\n          <td> {props.todos[id].isDone ? \"完了\" : \"未完了\"}</td>\n        </tr>\n        <tr>\n          <th>タスク名</th>\n          <td> {props.todos[id].title}</td>\n        </tr>\n      </table>\n      <a href=\"/\">\n        <button>戻る</button>\n      </a>\n    </div>\n  );\n}\n\nexport default Detail;\n","import \"../css/App.css\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Edit(props) {\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (!props.editingText) {\n      props.inputEditingText(props.todos[id].title);\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={props.updateTodo} id={id}>\n        <input\n          type=\"text\"\n          defaultValue={props.editingText}\n          onChange={props.updateEditingText}\n        />\n        <input type=\"submit\" value=\"更新\" />\n      </form>\n\n      <a href=\"/\">\n        <button>戻る</button>\n      </a>\n    </div>\n  );\n}\n\nexport default Edit;\n","import \"../css/App.css\";\n\nfunction Header() {\n  return <h1 className=\"container\">To Do List</h1>;\n}\n\nexport default Header;\n","import \"../css/App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\nimport Edit from \"./Edit\";\nimport { FILTER_STATE } from \"../const/filter-state\";\nimport Header from \"./Header\";\n\nfunction App() {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem(\"todos\")) || []\n  );\n  const [inputText, setInputText] = useState(\"\");\n  const [editingText, setEditingText] = useState(\"\");\n  const [filterState, setFilterState] = useState(FILTER_STATE.ALL);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  });\n\n  const redirectToRoot = () => {\n    window.location.pathname = \"/\";\n  };\n\n  function changeFilterState(e) {\n    setFilterState(e.target.value);\n  }\n\n  function updateInputText(e) {\n    setInputText(e.target.value);\n  }\n\n  function updateEditingText(e) {\n    setEditingText(e.target.value);\n  }\n\n  function inputEditingText(editingTitle) {\n    setEditingText(editingTitle);\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n\n    if (inputText.trim() === \"\") {\n      return;\n    }\n\n    const todosCopy = todos.slice();\n    todosCopy.push({\n      createdAt: new Date(),\n      isDone: false,\n      title: inputText,\n    });\n\n    setTodos(todosCopy);\n    setInputText(\"\");\n  }\n\n  function updateTodo(e) {\n    e.preventDefault();\n    const editingItemId = e.target.id;\n    console.log(editingText);\n\n    if (editingText.trim() === \"\") {\n      return;\n    }\n\n    const todosCopy = todos.slice();\n    todosCopy[editingItemId].title = editingText;\n    console.log(todosCopy);\n\n    setTodos(todosCopy);\n    setEditingText(\"\");\n    redirectToRoot();\n  }\n\n  function deleteTodo(targetTodoCreatedAt) {\n    const todosCopy = todos.slice();\n\n    const newTodos = todosCopy.filter(\n      (todo) => todo.createdAt !== targetTodoCreatedAt\n    );\n    setTodos(newTodos);\n  }\n\n  function toggleCheck(targetTodoCreatedAt) {\n    const createdAtArray = todos.map((todo) => todo.createdAt);\n\n    const editingTodoIndex = createdAtArray.indexOf(targetTodoCreatedAt);\n\n    const todosCopy = todos.slice();\n    const checkedState = todosCopy[editingTodoIndex].isDone;\n\n    checkedState\n      ? (todosCopy[editingTodoIndex].isDone = false)\n      : (todosCopy[editingTodoIndex].isDone = true);\n\n    setTodos(todosCopy);\n  }\n\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Route path=\"/\" component={Header} />\n        <Route exact path=\"/\">\n          <Home\n            addTodo={addTodo}\n            inputText={inputText}\n            updateInputText={updateInputText}\n            todos={todos}\n            toggleCheck={toggleCheck}\n            deleteTodo={deleteTodo}\n            filterState={filterState}\n            changeFilterState={changeFilterState}\n          />\n        </Route>\n        <Route exact path=\"/detail/:id\">\n          <Detail todos={todos} />\n        </Route>\n        <Route exact path=\"/edit/:id\">\n          <Edit\n            todos={todos}\n            updateTodo={updateTodo}\n            editingText={editingText}\n            updateEditingText={updateEditingText}\n            inputEditingText={inputEditingText}\n          />\n        </Route>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./component/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}